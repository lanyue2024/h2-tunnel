global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


resolvers mydns
  nameserver dns1 1.1.1.1:53
  nameserver dns2 8.8.8.8:53
  resolve_retries 3
  timeout resolve 1s
  timeout retry   1s
  hold other      30s
  hold refused    30s
  hold nx         30s
  hold timeout    30s
  hold valid      30s
  hold obsolete   30s
  accepted_payload_size 2048 


listen h2_auth
  bind :1443 ssl crt /etc/haproxy/server.crt ssl-min-ver TLSv1.2 alpn h2,http/1.1
  mode http
  acl auth_ok path /KEY/
  http-request track-sc0 src table fe_main if auth_ok
  http-request sc-set-gpt0(0) 1 if auth_ok
  http-request deny deny_status 200 if auth_ok
  http-request deny deny_status 404


frontend fe_main
  bind :443
  mode tcp
  option tcplog
  stick-table type ip size 100 expire 1h store gpt0

  acl auth_ok src_get_gpt0 eq 1
  use_backend be_tunnel if auth_ok
  default_backend be_default


backend be_tunnel
  mode tcp
  server srv1 127.0.0.1:2443


listen h2_tunnel
  bind 127.0.0.1:2443 ssl crt /etc/haproxy/server.crt ssl-min-ver TLSv1.3 alpn h2,http/1.1
  mode tcp
  option tcplog
  server srv1 127.0.0.1:3443


frontend fe_sniproxy
  bind 127.0.0.1:3443
  mode tcp
  option tcplog

  acl ssl_client req.ssl_hello_type 1
  tcp-request inspect-delay 5s
  tcp-request content do-resolve(sess.sniip,mydns,ipv4) req.ssl_sni if ssl_client
  tcp-request content accept

  use_backend be_sniproxy if ssl_client
  default_backend be_local_port


backend be_sniproxy
  mode tcp
  tcp-request content set-dst var(sess.sniip)
  tcp-request content set-dst-port int(443)
  server srv1 0.0.0.0:0


backend be_local_port
  mode tcp
  server srv1 127.0.0.1:7200


backend be_default
  mode tcp
  tcp-request inspect-delay 5s
  tcp-request content do-resolve(sess.myip,mydns,ipv4) str(HOST)
  tcp-request content set-dst var(sess.myip)
  tcp-request content set-dst-port int(443)
  server srv1 0.0.0.0:0

